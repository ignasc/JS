Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.


-------------------------------------------
sumFibs(1) should return a number.
Passed

sumFibs(1000) should return 1785.
Passed

sumFibs(4000000) should return 4613732.
Passed

sumFibs(4) should return 5.
Passed

sumFibs(75024) should return 60696.
Passed

sumFibs(75025) should return 135721.

------------------------------------------
function sumFibs(num) {

  //PSEUDOKODAS
  //Naudojam fibonaci formule sugeneruoti fibonaci sekos skaicius, kurie <= uz duota skaiciu
  //Tikrinam kiekviena skaiciu, ar jis yra lyginis, ar nelyginis
    //Jei lyginis - praleidziam, o jei nelyginis = pridedam prie bendros sumos

  let firstFib = 1;
  let secondFib = 1;
  let fibArray = [1, 1]; //including first two numbers
  let galutineSuma = 0;

  //Fibonachi generatorius
  while (fibArray[fibArray.length-1] + fibArray[fibArray.length-2] <= num) {
    fibArray.push(fibArray[fibArray.length-1] + fibArray[fibArray.length-2])
  } 

  for (let i = 0; i < fibArray.length; i++){

    if(fibArray[i] % 2 != 0){
      galutineSuma += fibArray[i];
    }

  }
  return galutineSuma;
}

sumFibs(4);