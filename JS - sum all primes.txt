A prime number is a whole number greater than 1 with exactly two divisors: 1 and itself. For example, 2 is a prime number because it is only divisible by 1 and 2. In contrast, 4 is not prime since it is divisible by 1, 2 and 4.

Rewrite sumPrimes so it returns the sum of all prime numbers that are less than or equal to num.


-------------------------------------------
sumPrimes(10) should return a number.
Passed

sumPrimes(10) should return 17.
Passed

sumPrimes(977) should return 73156.

------------------------------------------
function sumPrimes(num) {

  //SPEUDOCODE:
  //Generate array of prime numbers up to num
    //for each number, iterate from 2 to i < num and check if num%i==0
      //If true, then number is NOT a prime. Else it is a prime and store it in the array
  //P.S. This is very unoptimised, dirty code

  let arrayOfPrimes = [];
  let isPrime = true;
  let suma = 0;

  for (let i = 2; i <= num; i++){
    if(isItPrime(i)){
      arrayOfPrimes.push(i);
    }
  }

  //Sumatorius
  for (let i = 0; i < arrayOfPrimes.length; i++){
    suma += arrayOfPrimes[i];
  }

  return suma;
}

sumPrimes(977);

//Prime number tikrintuvas
function isItPrime(number){
  for (let i = 2; i < number; i++){
    if(number % i == 0){
      return false;
    }
  }
  return true;
}