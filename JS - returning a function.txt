Arguments optional

Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.

For example, addTogether(2, 3) should return 5, and addTogether(2) should return a function.

Calling this returned function with a single argument will then return the sum:

var sumTwoAnd = addTogether(2);

sumTwoAnd(3) returns 5.

If either argument isn't a valid number, return undefined.


-------------------------------------------
addTogether(2, 3) should return 5.
Passed

addTogether(23, 30) should return 53.
Passed

addTogether(5)(7) should return 12.
Passed

addTogether("http://bit.ly/IqT6zt") should return undefined.
Passed

addTogether(2, "3") should return undefined.
Passed

addTogether(2)([3]) should return undefined.

------------------------------------------
function addTogether() {
  let suma;
  //Tikrinam, ar nera daugiau nei dvieju parametru
  if (arguments.length > 2){
    return undefined;
  }

  //function to check if arguments are numbers
  function checkNumber(num){
    return typeof num == "number" ? true : false;
  }

  let pirmasSkaicius = arguments[0];
  let antrasSkaicius = arguments[1];//Net jei tik vienas argumentas, sitas error nemes, o bus tiesiog undefined

  //If there are two arguments and both are numbers
  if (arguments.length == 2 && checkNumber(arguments[0]) && checkNumber(arguments[1])){
    return pirmasSkaicius + antrasSkaicius;
  }

  //If there is one argument and it is a number, return a function, that expects another argument
  if (arguments.length == 1 && checkNumber(arguments[0])){

    return function antrasParametras(skaicius){

      if(checkNumber(skaicius)){
        return pirmasSkaicius + skaicius;
      } else {
        return undefined;
      }

    }

  }
  //Visais kitais atvejais undefined
  return undefined;
}

addTogether(2,3);